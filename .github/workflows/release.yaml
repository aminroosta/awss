name: release

on:
  push:
    tags:
      - "v*"
      - "*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build executables
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux GNU
          - target: bun-linux-x64
            os: ubuntu-latest
            suffix: linux-x64
          - target: bun-linux-arm64
            os: ubuntu-latest
            suffix: linux-arm64
          # Linux MUSL (Alpine)
          - target: bun-linux-x64-musl
            os: ubuntu-latest
            suffix: linux-musl-x64
          - target: bun-linux-arm64-musl
            os: ubuntu-latest
            suffix: linux-musl-arm64
          # macOS (Darwin)
          - target: bun-darwin-x64
            os: macos-latest
            suffix: macos-x64
          - target: bun-darwin-arm64
            os: macos-latest
            suffix: macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build executable
        shell: bash
        env:
          APP_NAME: awss
        run: |
          set -euo pipefail
          echo "Building ${APP_NAME} -> target=${{ matrix.target }}"

          bun run build.ts target=${{ matrix.target }} outdir=./dist outfile="${APP_NAME}"

          OUT="dist/${APP_NAME}"
          chmod +x "$OUT"
          echo "OUT=$OUT" >> "$GITHUB_ENV"

      - name: Package artifact
        shell: bash
        env:
          APP_NAME: awss
        run: |
          set -euo pipefail
          VERSION="${GITHUB_REF_NAME}"
          SUFFIX="${{ matrix.suffix }}"

          mkdir -p upload
          tar -C dist -czf "upload/${APP_NAME}-${VERSION}-${SUFFIX}.tar.gz" "${APP_NAME}"

      - name: Generate checksums
        shell: bash
        run: |
          set -euo pipefail
          cd upload
          shasum -a 256 *.tar.gz > SHA256SUMS.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}-${{ matrix.suffix }}
          path: upload/*
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-packages

      - name: Collate checksums
        shell: bash
        run: |
          set -euo pipefail
          cd dist-packages
          cat */SHA256SUMS.txt > SHA256SUMS.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            dist-packages/**/*
            dist-packages/SHA256SUMS.txt
